{"content":"<h2 id=\"元数据\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#元数据\"><span>元数据</span></a></h2>\n<ul>\n<li>分类：深度学习</li>\n<li>标签：显存分析, 优化器状态, 模型参数, 混合精度</li>\n<li>日期：2025年4月12日</li>\n</ul>\n<h2 id=\"核心观点总结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#核心观点总结\"><span>核心观点总结</span></a></h2>\n<p>本文探讨了深度学习训练阶段的显存消耗，重点分析了模型参数、优化器状态、梯度值和激活值对显存的影响。通过计算公式，我们可以估算不同数据类型和优化器配置下的显存需求。</p>\n<h2 id=\"重点段落\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#重点段落\"><span>重点段落</span></a></h2>\n<h3 id=\"静态值分析\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#静态值分析\"><span>静态值分析</span></a></h3>\n<ul>\n<li>\n<p><strong>模型显存</strong>：模型的显存消耗与参数量和数据类型有关。常见的数据类型有fp32、fp16/bf16和int8等。显存计算公式为：</p>\n<p v-pre class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>ModelMem</mtext><mo>=</mo><mtext>TypeSize</mtext><mo>×</mo><mtext>Params</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{ModelMem} = \\text{TypeSize} \\times \\text{Params}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">ModelMem</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">TypeSize</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Params</span></span></span></span></span></span></p>\n<p>根据不同数据类型，计算公式如下（单位：GB）：</p>\n<ul>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp32</mtext><mo>=</mo><mfrac><mrow><mn>4</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp32} = \\frac{4 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">fp32</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp16/bf16</mtext><mo>=</mo><mfrac><mrow><mn>2</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp16/bf16} = \\frac{2 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">fp16/bf16</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp8/int8</mtext><mo>=</mo><mfrac><mrow><mn>1</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp8/int8} = \\frac{1 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">fp8/int8</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p><strong>优化器状态</strong>：在LLM中常用的优化器是Adam，它需要为每个参数维护Momentum和Variance状态。在混合精度训练中，还需一份模型参数副本。Adam的优化器状态显存计算公式为：</p>\n<p v-pre class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>OptMem</mtext><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mtext>Params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{OptMem} = \\frac{(4 + 4 + 4) \\times \\text{Params}}{1024 \\times 1024 \\times 1024}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">OptMem</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1963em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1024</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1024</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1024</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">4</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord text\"><span class=\"mord\">Params</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n</li>\n</ul>\n<h3 id=\"动态值分析\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#动态值分析\"><span>动态值分析</span></a></h3>\n<ul>\n<li><strong>激活值</strong>：激活值大小与模型参数、重计算策略、并行策略等相关。根据Megtron论文提供的公式，可以估算激活值占用的显存大小。</li>\n</ul>\n<h2 id=\"操作步骤\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#操作步骤\"><span>操作步骤</span></a></h2>\n<ol>\n<li>✅ <strong>确定数据类型</strong>：选择合适的数据类型（如fp32、fp16）来计算模型参数的显存消耗。</li>\n<li>⚠ <strong>计算优化器状态</strong>：根据选择的优化器（如Adam），计算其状态参数所需的显存。</li>\n<li>❗ <strong>评估激活值</strong>：使用参考公式评估激活值对显存的影响。</li>\n</ol>\n<h2 id=\"常见错误\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#常见错误\"><span>常见错误</span></a></h2>\n<blockquote>\n<p>⚠ 在计算模型显存时，忽略了数据类型对结果的影响。确保选择正确的数据类型进行估算。</p>\n</blockquote>\n<h2 id=\"💡-启发点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#💡-启发点\"><span>💡 启发点</span></a></h2>\n<p>混合精度训练可以有效减少显存占用，但需要注意最终存储时仍需转为fp32。</p>\n<h2 id=\"行动清单\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#行动清单\"><span>行动清单</span></a></h2>\n<ul class=\"task-list-container\">\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-0\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-0\"> 检查并优化当前模型的显存使用情况。</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-1\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-1\"> 探索混合精度训练在实际项目中的应用。</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-2\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-2\"> 学习并应用其他优化器以降低显存需求。</label></li>\n</ul>\n<blockquote>\n<p>原始出处：[选取内容]</p>\n</blockquote>\n","env":{"base":"/","filePath":"/Users/qianyuhe/Desktop/my-project/docs/notes_bak/大语言模型学习/训练推理优化/训练推理显存占用分析/训练阶段的显存分析.md","filePathRelative":"notes_bak/大语言模型学习/训练推理优化/训练推理显存占用分析/训练阶段的显存分析.md","frontmatter":{"dg-publish":true,"dg-permalink":"/大语言模型学习/训练推理优化/训练推理显存占用分析/训练阶段的显存分析","dg-home":false,"dg-description":"在此输入笔记的描述","dg-hide":false,"dg-hide-title":false,"dg-show-backlinks":true,"dg-show-local-graph":true,"dg-show-inline-title":true,"dg-pinned":false,"dg-passphrase":"在此输入访问密码","dg-enable-mathjax":false,"dg-enable-mermaid":false,"dg-enable-uml":false,"dg-note-icon":0,"dg-enable-dataview":false,"tags":["NLP"],"permalink":"/大语言模型学习/训练推理优化/训练推理显存占用分析/训练阶段的显存分析/","dgShowBacklinks":true,"dgShowLocalGraph":true,"dgShowInlineTitle":true,"dgPassFrontmatter":true,"noteIcon":0,"created":"2025-04-28T14:01:37.000Z","updated":"2025-04-29T03:00:58.000Z","title":"训练阶段的显存分析","createTime":"2025/05/13 17:33:53"},"sfcBlocks":{"template":{"type":"template","content":"<template><h2 id=\"元数据\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#元数据\"><span>元数据</span></a></h2>\n<ul>\n<li>分类：深度学习</li>\n<li>标签：显存分析, 优化器状态, 模型参数, 混合精度</li>\n<li>日期：2025年4月12日</li>\n</ul>\n<h2 id=\"核心观点总结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#核心观点总结\"><span>核心观点总结</span></a></h2>\n<p>本文探讨了深度学习训练阶段的显存消耗，重点分析了模型参数、优化器状态、梯度值和激活值对显存的影响。通过计算公式，我们可以估算不同数据类型和优化器配置下的显存需求。</p>\n<h2 id=\"重点段落\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#重点段落\"><span>重点段落</span></a></h2>\n<h3 id=\"静态值分析\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#静态值分析\"><span>静态值分析</span></a></h3>\n<ul>\n<li>\n<p><strong>模型显存</strong>：模型的显存消耗与参数量和数据类型有关。常见的数据类型有fp32、fp16/bf16和int8等。显存计算公式为：</p>\n<p v-pre class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>ModelMem</mtext><mo>=</mo><mtext>TypeSize</mtext><mo>×</mo><mtext>Params</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{ModelMem} = \\text{TypeSize} \\times \\text{Params}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">ModelMem</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">TypeSize</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Params</span></span></span></span></span></span></p>\n<p>根据不同数据类型，计算公式如下（单位：GB）：</p>\n<ul>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp32</mtext><mo>=</mo><mfrac><mrow><mn>4</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp32} = \\frac{4 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">fp32</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp16/bf16</mtext><mo>=</mo><mfrac><mrow><mn>2</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp16/bf16} = \\frac{2 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">fp16/bf16</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp8/int8</mtext><mo>=</mo><mfrac><mrow><mn>1</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp8/int8} = \\frac{1 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">fp8/int8</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p><strong>优化器状态</strong>：在LLM中常用的优化器是Adam，它需要为每个参数维护Momentum和Variance状态。在混合精度训练中，还需一份模型参数副本。Adam的优化器状态显存计算公式为：</p>\n<p v-pre class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>OptMem</mtext><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mtext>Params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{OptMem} = \\frac{(4 + 4 + 4) \\times \\text{Params}}{1024 \\times 1024 \\times 1024}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">OptMem</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1963em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1024</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1024</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1024</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">4</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord text\"><span class=\"mord\">Params</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n</li>\n</ul>\n<h3 id=\"动态值分析\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#动态值分析\"><span>动态值分析</span></a></h3>\n<ul>\n<li><strong>激活值</strong>：激活值大小与模型参数、重计算策略、并行策略等相关。根据Megtron论文提供的公式，可以估算激活值占用的显存大小。</li>\n</ul>\n<h2 id=\"操作步骤\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#操作步骤\"><span>操作步骤</span></a></h2>\n<ol>\n<li>✅ <strong>确定数据类型</strong>：选择合适的数据类型（如fp32、fp16）来计算模型参数的显存消耗。</li>\n<li>⚠ <strong>计算优化器状态</strong>：根据选择的优化器（如Adam），计算其状态参数所需的显存。</li>\n<li>❗ <strong>评估激活值</strong>：使用参考公式评估激活值对显存的影响。</li>\n</ol>\n<h2 id=\"常见错误\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#常见错误\"><span>常见错误</span></a></h2>\n<blockquote>\n<p>⚠ 在计算模型显存时，忽略了数据类型对结果的影响。确保选择正确的数据类型进行估算。</p>\n</blockquote>\n<h2 id=\"💡-启发点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#💡-启发点\"><span>💡 启发点</span></a></h2>\n<p>混合精度训练可以有效减少显存占用，但需要注意最终存储时仍需转为fp32。</p>\n<h2 id=\"行动清单\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#行动清单\"><span>行动清单</span></a></h2>\n<ul class=\"task-list-container\">\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-0\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-0\"> 检查并优化当前模型的显存使用情况。</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-1\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-1\"> 探索混合精度训练在实际项目中的应用。</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-2\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-2\"> 学习并应用其他优化器以降低显存需求。</label></li>\n</ul>\n<blockquote>\n<p>原始出处：[选取内容]</p>\n</blockquote>\n</template>","contentStripped":"<h2 id=\"元数据\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#元数据\"><span>元数据</span></a></h2>\n<ul>\n<li>分类：深度学习</li>\n<li>标签：显存分析, 优化器状态, 模型参数, 混合精度</li>\n<li>日期：2025年4月12日</li>\n</ul>\n<h2 id=\"核心观点总结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#核心观点总结\"><span>核心观点总结</span></a></h2>\n<p>本文探讨了深度学习训练阶段的显存消耗，重点分析了模型参数、优化器状态、梯度值和激活值对显存的影响。通过计算公式，我们可以估算不同数据类型和优化器配置下的显存需求。</p>\n<h2 id=\"重点段落\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#重点段落\"><span>重点段落</span></a></h2>\n<h3 id=\"静态值分析\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#静态值分析\"><span>静态值分析</span></a></h3>\n<ul>\n<li>\n<p><strong>模型显存</strong>：模型的显存消耗与参数量和数据类型有关。常见的数据类型有fp32、fp16/bf16和int8等。显存计算公式为：</p>\n<p v-pre class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>ModelMem</mtext><mo>=</mo><mtext>TypeSize</mtext><mo>×</mo><mtext>Params</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{ModelMem} = \\text{TypeSize} \\times \\text{Params}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">ModelMem</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">TypeSize</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Params</span></span></span></span></span></span></p>\n<p>根据不同数据类型，计算公式如下（单位：GB）：</p>\n<ul>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp32</mtext><mo>=</mo><mfrac><mrow><mn>4</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp32} = \\frac{4 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">fp32</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp16/bf16</mtext><mo>=</mo><mfrac><mrow><mn>2</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp16/bf16} = \\frac{2 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">fp16/bf16</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n<li><span v-pre class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>fp8/int8</mtext><mo>=</mo><mfrac><mrow><mn>1</mn><mo>×</mo><mtext>params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{fp8/int8} = \\frac{1 \\times \\text{params}}{1024 \\times 1024 \\times 1024}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">fp8/int8</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3005em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8972em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span><span class=\"mbin mtight\">×</span><span class=\"mord mtight\">1024</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">×</span><span class=\"mord text mtight\"><span class=\"mord mtight\">params</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ul>\n</li>\n<li>\n<p><strong>优化器状态</strong>：在LLM中常用的优化器是Adam，它需要为每个参数维护Momentum和Variance状态。在混合精度训练中，还需一份模型参数副本。Adam的优化器状态显存计算公式为：</p>\n<p v-pre class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>OptMem</mtext><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>4</mn><mo stretchy=\"false\">)</mo><mo>×</mo><mtext>Params</mtext></mrow><mrow><mn>1024</mn><mo>×</mo><mn>1024</mn><mo>×</mo><mn>1024</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\text{OptMem} = \\frac{(4 + 4 + 4) \\times \\text{Params}}{1024 \\times 1024 \\times 1024}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">OptMem</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1963em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1024</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1024</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1024</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">4</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord text\"><span class=\"mord\">Params</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n</li>\n</ul>\n<h3 id=\"动态值分析\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#动态值分析\"><span>动态值分析</span></a></h3>\n<ul>\n<li><strong>激活值</strong>：激活值大小与模型参数、重计算策略、并行策略等相关。根据Megtron论文提供的公式，可以估算激活值占用的显存大小。</li>\n</ul>\n<h2 id=\"操作步骤\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#操作步骤\"><span>操作步骤</span></a></h2>\n<ol>\n<li>✅ <strong>确定数据类型</strong>：选择合适的数据类型（如fp32、fp16）来计算模型参数的显存消耗。</li>\n<li>⚠ <strong>计算优化器状态</strong>：根据选择的优化器（如Adam），计算其状态参数所需的显存。</li>\n<li>❗ <strong>评估激活值</strong>：使用参考公式评估激活值对显存的影响。</li>\n</ol>\n<h2 id=\"常见错误\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#常见错误\"><span>常见错误</span></a></h2>\n<blockquote>\n<p>⚠ 在计算模型显存时，忽略了数据类型对结果的影响。确保选择正确的数据类型进行估算。</p>\n</blockquote>\n<h2 id=\"💡-启发点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#💡-启发点\"><span>💡 启发点</span></a></h2>\n<p>混合精度训练可以有效减少显存占用，但需要注意最终存储时仍需转为fp32。</p>\n<h2 id=\"行动清单\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#行动清单\"><span>行动清单</span></a></h2>\n<ul class=\"task-list-container\">\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-0\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-0\"> 检查并优化当前模型的显存使用情况。</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-1\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-1\"> 探索混合精度训练在实际项目中的应用。</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" class=\"task-list-item-checkbox\" id=\"task-item-2\" disabled=\"disabled\"><label class=\"task-list-item-label\" for=\"task-item-2\"> 学习并应用其他优化器以降低显存需求。</label></li>\n</ul>\n<blockquote>\n<p>原始出处：[选取内容]</p>\n</blockquote>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"## 元数据\n- 分类：深度学习\n- 标签：显存分析, 优化器状态, 模型参数, 混合精度\n- 日期：2025年4月12日\n\n\n\n## 核心观点总结\n本文探讨了深度学习训练阶段的显存消耗，重点分析了模型参数、优化器状态、梯度值和激活值对显存的影响。通过计算公式，我们可以估算不同数据类型和优化器配置下的显存需求。\n\n\n\n## 重点段落\n\n### 静态值分析\n- **模型显存**：模型的显存消耗与参数量和数据类型有关。常见的数据类型有fp32、fp16/bf16和int8等。显存计算公式为：\n  $$\n  \\text{ModelMem} = \\text{TypeSize} \\times \\text{Params}\n  $$\n  根据不同数据类型，计算公式如下（单位：GB）：\n  - $\\text{fp32} = \\frac{4 \\times \\text{params}}{1024 \\times 1024 \\times 1024}$\n  - $\\text{fp16/bf16} = \\frac{2 \\times \\text{params}}{1024 \\times 1024 \\times 1024}$\n  - $\\text{fp8/int8} = \\frac{1 \\times \\text{params}}{1024 \\times 1024 \\times 1024}$\n\n- **优化器状态**：在LLM中常用的优化器是Adam，它需要为每个参数维护Momentum和Variance状态。在混合精度训练中，还需一份模型参数副本。Adam的优化器状态显存计算公式为：\n  $$\n  \\text{OptMem} = \\frac{(4 + 4 + 4) \\times \\text{Params}}{1024 \\times 1024 \\times 1024}\n  $$\n\n\n### 动态值分析\n- **激活值**：激活值大小与模型参数、重计算策略、并行策略等相关。根据Megtron论文提供的公式，可以估算激活值占用的显存大小。\n\n\n\n## 操作步骤\n1. ✅ **确定数据类型**：选择合适的数据类型（如fp32、fp16）来计算模型参数的显存消耗。\n2. ⚠ **计算优化器状态**：根据选择的优化器（如Adam），计算其状态参数所需的显存。\n3. ❗ **评估激活值**：使用参考公式评估激活值对显存的影响。\n\n\n\n## 常见错误\n> ⚠ 在计算模型显存时，忽略了数据类型对结果的影响。确保选择正确的数据类型进行估算。\n\n\n\n## 💡 启发点\n混合精度训练可以有效减少显存占用，但需要注意最终存储时仍需转为fp32。\n\n\n\n## 行动清单\n- [ ] 检查并优化当前模型的显存使用情况。\n- [ ] 探索混合精度训练在实际项目中的应用。\n- [ ] 学习并应用其他优化器以降低显存需求。\n\n> 原始出处：[选取内容]","excerpt":"","includedFiles":[],"tasklistId":3,"title":"","headers":[{"level":2,"title":"元数据","slug":"元数据","link":"#元数据","children":[]},{"level":2,"title":"核心观点总结","slug":"核心观点总结","link":"#核心观点总结","children":[]},{"level":2,"title":"重点段落","slug":"重点段落","link":"#重点段落","children":[{"level":3,"title":"静态值分析","slug":"静态值分析","link":"#静态值分析","children":[]},{"level":3,"title":"动态值分析","slug":"动态值分析","link":"#动态值分析","children":[]}]},{"level":2,"title":"操作步骤","slug":"操作步骤","link":"#操作步骤","children":[]},{"level":2,"title":"常见错误","slug":"常见错误","link":"#常见错误","children":[]},{"level":2,"title":"💡 启发点","slug":"💡-启发点","link":"#💡-启发点","children":[]},{"level":2,"title":"行动清单","slug":"行动清单","link":"#行动清单","children":[]}]}}
