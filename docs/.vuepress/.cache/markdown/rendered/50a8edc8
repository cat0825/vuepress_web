{"content":"<p>在 C++ 中，<code v-pre>using</code> 关键字和名称空间（<code v-pre>namespace</code>）是两个非常重要的概念，它们帮助你管理代码的结构和简化代码中的命名问题。</p>\n<h2 id=\"_1-namespace-名称空间\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-namespace-名称空间\"><span>1. <code v-pre>namespace</code>（名称空间）</span></a></h2>\n<p><code v-pre>namespace</code> 是一种组织代码的方式，允许你将变量、函数、类等放入不同的命名空间中，以避免名称冲突。假设你有多个库，每个库中都有一个叫做 <code v-pre>print</code> 的函数，如果不使用命名空间，它们会互相冲突。使用命名空间可以将这些函数放在不同的命名空间下，从而避免冲突。</p>\n<p><strong>示例：</strong></p>\n<div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">#</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">include</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> &#x3C;</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">iostream</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义一个名为 A 的命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is A's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义另一个名为 B 的命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is B's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> main</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 调用 A 和 B 中的 print 函数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is A's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is B's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">```</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">## </span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2.</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">  **</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">`using` 关键字</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">using</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> 关键字允许你在特定的范围内直接使用某个命名空间中的成员，而不必每次都写出完整的命名空间路径。这使得代码更加简洁。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">```cpp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">#</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">include</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> &#x3C;</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">iostream</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义命名空间 A 和 B</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is A's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is B's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> main</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 使用 using 关键字来避免每次写完整命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    using</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 现在我们可以直接使用 A 中的成员</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 直接调用 A::print()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 如果需要调用 B 的 print，还是需要指定命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is B's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"/Users/qianyuhe/Desktop/my-project/docs/notes_bak/c++ primer plus/using和namespace 2.md","filePathRelative":"notes_bak/c++ primer plus/using和namespace 2.md","frontmatter":{"dg-publish":true,"dg-permalink":"/cpp/using","permalink":"/cpp/using/","dgPassFrontmatter":true,"noteIcon":null,"created":"2024-12-28T03:52:53.000Z","updated":"2025-01-01T14:39:15.000Z","title":"using和namespace","createTime":"2025/05/13 17:33:52"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>在 C++ 中，<code v-pre>using</code> 关键字和名称空间（<code v-pre>namespace</code>）是两个非常重要的概念，它们帮助你管理代码的结构和简化代码中的命名问题。</p>\n<h2 id=\"_1-namespace-名称空间\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-namespace-名称空间\"><span>1. <code v-pre>namespace</code>（名称空间）</span></a></h2>\n<p><code v-pre>namespace</code> 是一种组织代码的方式，允许你将变量、函数、类等放入不同的命名空间中，以避免名称冲突。假设你有多个库，每个库中都有一个叫做 <code v-pre>print</code> 的函数，如果不使用命名空间，它们会互相冲突。使用命名空间可以将这些函数放在不同的命名空间下，从而避免冲突。</p>\n<p><strong>示例：</strong></p>\n<div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">#</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">include</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> &#x3C;</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">iostream</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义一个名为 A 的命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is A's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义另一个名为 B 的命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is B's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> main</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 调用 A 和 B 中的 print 函数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is A's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is B's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">```</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">## </span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2.</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">  **</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">`using` 关键字</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">using</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> 关键字允许你在特定的范围内直接使用某个命名空间中的成员，而不必每次都写出完整的命名空间路径。这使得代码更加简洁。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">```cpp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">#</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">include</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> &#x3C;</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">iostream</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义命名空间 A 和 B</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is A's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is B's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> main</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 使用 using 关键字来避免每次写完整命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    using</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 现在我们可以直接使用 A 中的成员</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 直接调用 A::print()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 如果需要调用 B 的 print，还是需要指定命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is B's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<p>在 C++ 中，<code v-pre>using</code> 关键字和名称空间（<code v-pre>namespace</code>）是两个非常重要的概念，它们帮助你管理代码的结构和简化代码中的命名问题。</p>\n<h2 id=\"_1-namespace-名称空间\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-namespace-名称空间\"><span>1. <code v-pre>namespace</code>（名称空间）</span></a></h2>\n<p><code v-pre>namespace</code> 是一种组织代码的方式，允许你将变量、函数、类等放入不同的命名空间中，以避免名称冲突。假设你有多个库，每个库中都有一个叫做 <code v-pre>print</code> 的函数，如果不使用命名空间，它们会互相冲突。使用命名空间可以将这些函数放在不同的命名空间下，从而避免冲突。</p>\n<p><strong>示例：</strong></p>\n<div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">#</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">include</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> &#x3C;</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">iostream</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义一个名为 A 的命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is A's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义另一个名为 B 的命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is B's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> main</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 调用 A 和 B 中的 print 函数</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is A's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is B's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">```</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">## </span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\">2.</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">  **</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">`using` 关键字</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">**</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">using</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> 关键字允许你在特定的范围内直接使用某个命名空间中的成员，而不必每次都写出完整的命名空间路径。这使得代码更加简洁。</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">```cpp</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">#</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">include</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> &#x3C;</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">iostream</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">// 定义命名空间 A 和 B</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is A's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">    void</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">        std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">cout </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;&#x3C;</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\"> \"</span><span style=\"--shiki-light:#B56959;--shiki-dark:#C98A7D\">This is B's print function.</span><span style=\"--shiki-light:#B5695977;--shiki-dark:#C98A7D77\">\"</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> &#x3C;&#x3C;</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> std</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">endl</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> main</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">()</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 使用 using 关键字来避免每次写完整命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    using</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> namespace</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> A</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 现在我们可以直接使用 A 中的成员</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 直接调用 A::print()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">    // 如果需要调用 B 的 print，还是需要指定命名空间</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">    B</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">::</span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\">print</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">();</span><span style=\"--shiki-light:#A0ADA0;--shiki-dark:#758575DD\">  // 输出: This is B's print function.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">    </span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">    return</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">}</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n在 C++ 中，`using` 关键字和名称空间（`namespace`）是两个非常重要的概念，它们帮助你管理代码的结构和简化代码中的命名问题。\n\n## 1. `namespace`（名称空间）\n\n`namespace` 是一种组织代码的方式，允许你将变量、函数、类等放入不同的命名空间中，以避免名称冲突。假设你有多个库，每个库中都有一个叫做 `print` 的函数，如果不使用命名空间，它们会互相冲突。使用命名空间可以将这些函数放在不同的命名空间下，从而避免冲突。\n\n**示例：**\n\n```cpp\n#include <iostream>\n\n// 定义一个名为 A 的命名空间\nnamespace A {\n    void print() {\n        std::cout << \"This is A's print function.\" << std::endl;\n    }\n}\n\n// 定义另一个名为 B 的命名空间\nnamespace B {\n    void print() {\n        std::cout << \"This is B's print function.\" << std::endl;\n    }\n}\n\nint main() {\n    // 调用 A 和 B 中的 print 函数\n    A::print();  // 输出: This is A's print function.\n    B::print();  // 输出: This is B's print function.\n    return 0;\n}```\n## 2.  **`using` 关键字**\nusing 关键字允许你在特定的范围内直接使用某个命名空间中的成员，而不必每次都写出完整的命名空间路径。这使得代码更加简洁。\n```cpp\n#include <iostream>\n\n// 定义命名空间 A 和 B\nnamespace A {\n    void print() {\n        std::cout << \"This is A's print function.\" << std::endl;\n    }\n}\n\nnamespace B {\n    void print() {\n        std::cout << \"This is B's print function.\" << std::endl;\n    }\n}\n\nint main() {\n    // 使用 using 关键字来避免每次写完整命名空间\n    using namespace A;  // 现在我们可以直接使用 A 中的成员\n\n    print();  // 直接调用 A::print()\n\n    // 如果需要调用 B 的 print，还是需要指定命名空间\n    B::print();  // 输出: This is B's print function.\n    \n    return 0;\n}\n\n```","excerpt":"","includedFiles":[],"tasklistId":0,"title":"","headers":[{"level":2,"title":"1. namespace（名称空间）","slug":"_1-namespace-名称空间","link":"#_1-namespace-名称空间","children":[]}]}}
