{"content":"<div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> Solution</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">    vector</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> splitListToParts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">temp </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        while</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">temp </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">!=</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            n</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            temp </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> temp</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> quotient </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">/</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> remainder </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">%</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        vector</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x26;&#x26;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> curr </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">!=</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">            parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">            int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> partSize </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> quotient </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">+</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> remainder </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> :</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">            for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> partSize</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">                curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">next </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">            curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">};</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code v-pre>vector&lt;ListNode*&gt; parts(k,nullptr)</code>里面存储的是一个链表节点的哈希表,初始化长度为k,空指针\n**将m个数分成n组的问题,重点是怎么把前面的n组长度比后面的大\nint partSize = quotient + (i &lt; remainder ? 1 : 0);``</p>\n","env":{"base":"/","filePath":"/Users/qianyuhe/Desktop/my-project/docs/notes_bak/leetcode/链表/分隔链表.md","filePathRelative":"notes_bak/leetcode/链表/分隔链表.md","frontmatter":{"dg-publish":true,"dg-permalink":"/leetcode/链表/分隔链表","dg-home":false,"dg-description":"在此输入笔记的描述","dg-hide":false,"dg-hide-title":false,"dg-show-backlinks":true,"dg-show-local-graph":true,"dg-show-inline-title":true,"dg-pinned":false,"dg-passphrase":"在此输入访问密码","dg-enable-mathjax":false,"dg-enable-mermaid":false,"dg-enable-uml":false,"dg-note-icon":0,"dg-enable-dataview":false,"tags":["leetcode","链表"],"permalink":"/leetcode/链表/分隔链表/","dgShowBacklinks":true,"dgShowLocalGraph":true,"dgShowInlineTitle":true,"dgPassFrontmatter":true,"noteIcon":0,"created":"2025-04-01T11:57:33.000Z","updated":"2025-04-01T13:00:11.000Z","title":"分隔链表","createTime":"2025/05/13 17:33:52"},"sfcBlocks":{"template":{"type":"template","content":"<template><div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> Solution</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">    vector</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> splitListToParts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">temp </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        while</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">temp </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">!=</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            n</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            temp </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> temp</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> quotient </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">/</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> remainder </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">%</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        vector</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x26;&#x26;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> curr </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">!=</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">            parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">            int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> partSize </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> quotient </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">+</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> remainder </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> :</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">            for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> partSize</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">                curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">next </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">            curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">};</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code v-pre>vector&lt;ListNode*&gt; parts(k,nullptr)</code>里面存储的是一个链表节点的哈希表,初始化长度为k,空指针\n**将m个数分成n组的问题,重点是怎么把前面的n组长度比后面的大\nint partSize = quotient + (i &lt; remainder ? 1 : 0);``</p>\n</template>","contentStripped":"<div class=\"language-cpp line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"cpp\" style=\"--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212\"><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">class</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\"> Solution</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">public</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">    vector</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">&#x3C;</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> splitListToParts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#2E8F82;--shiki-dark:#5DA994\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> int</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">temp </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        while</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">temp </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">!=</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            n</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            temp </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> temp</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">        int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> quotient </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">/</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> remainder </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> n </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">%</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        vector</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">ListNode</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*></span><span style=\"--shiki-light:#59873A;--shiki-dark:#80A665\"> parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">(</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">k</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">,</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">        ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> head</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> k </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x26;&#x26;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> curr </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">!=</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> i</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">            parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">[</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">]</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">            int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> partSize </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> quotient </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">+</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">i </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> remainder </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">?</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\"> :</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 0</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">            for</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> (</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">int</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#2F798A;--shiki-dark:#4C9A91\"> 1</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">&#x3C;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> partSize</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> j</span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">++</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">)</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">                curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">            }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            ListNode </span><span style=\"--shiki-light:#AB5959;--shiki-dark:#CB7676\">*</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">next </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\"> curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">            curr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">-></span><span style=\"--shiki-light:#B07D48;--shiki-dark:#BD976A\">next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\"> =</span><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\"> nullptr</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\">            curr </span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">=</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> next</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">        }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#1E754F;--shiki-dark:#4D9375\">        return</span><span style=\"--shiki-light:#393A34;--shiki-dark:#DBD7CAEE\"> parts</span><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#999999;--shiki-dark:#666666\">};</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p><code v-pre>vector&lt;ListNode*&gt; parts(k,nullptr)</code>里面存储的是一个链表节点的哈希表,初始化长度为k,空指针\n**将m个数分成n组的问题,重点是怎么把前面的n组长度比后面的大\nint partSize = quotient + (i &lt; remainder ? 1 : 0);``</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"```cpp\nclass Solution {\npublic:\n    vector<ListNode*> splitListToParts(ListNode* head, int k) {\n        int n = 0;\n        ListNode *temp = head;\n        while (temp != nullptr) {\n            n++;\n            temp = temp->next;\n        }\n        int quotient = n / k, remainder = n % k;\n\n        vector<ListNode*> parts(k,nullptr);\n        ListNode *curr = head;\n        for (int i = 0; i < k && curr != nullptr; i++) {\n            parts[i] = curr;\n            int partSize = quotient + (i < remainder ? 1 : 0);\n            for (int j = 1; j < partSize; j++) {\n                curr = curr->next;\n            }\n            ListNode *next = curr->next;\n            curr->next = nullptr;\n            curr = next;\n        }\n        return parts;\n    }\n};\n```\n\n``vector<ListNode*> parts(k,nullptr)``里面存储的是一个链表节点的哈希表,初始化长度为k,空指针\n**将m个数分成n组的问题,重点是怎么把前面的n组长度比后面的大\nint partSize = quotient + (i < remainder ? 1 : 0);``","excerpt":"","includedFiles":[],"tasklistId":0,"title":"","headers":[]}}
